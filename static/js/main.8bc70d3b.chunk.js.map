{"version":3,"sources":["components/util/UsersApi.js","components/util/PostsApi.js","components/util/CommentsApi.js","components/util/PostsData.js","components/user/User.js","components/comment/Comment.js","components/comments-list/CommentsList.js","components/post/Post.js","components/post-list/PostList.js","components/search-field/SearchField.js","App.js","index.js"],"names":["UsersApi","fetch","then","response","json","PostsApi","CommentsApi","_callee","_ref","_ref2","posts","users","comments","postsData","regenerator_default","a","wrap","_context","prev","next","Promise","all","sent","Object","slicedToArray","map","post","objectSpread","user","find","id","userId","toConsumableArray","filter","comment","postId","abrupt","stop","User","name","email","address","street","suite","zipcode","city","geo","react_default","createElement","lat","lng","Comment","body","className","CommentsList","commentsList","item","key","Post","title","PostList","filterBy","value","SearchField","searchFieldType","searchFieldValue","updateSearchFieldsValue","type","onChange","autoComplete","App","props","_this","classCallCheck","this","possibleConstructorReturn","getPrototypeOf","call","loadData","_asyncRequest","_PostsData","apply","arguments","PostsData","externalData","setState","showFilteredPosts","fieldType","state","trim","toLowerCase","includes","e","target","console","log","isLoaded","_this$state","_this$state$searchFie","postsToRender","length","onClick","disabled","React","Component","ReactDOM","render","App_App","document","getElementById"],"mappings":"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","file":"static/js/main.8bc70d3b.chunk.js","sourcesContent":["export const UsersApi = () => {\n    return fetch('https://jsonplaceholder.typicode.com/users')\n        .then(response => response.json());\n};\n","export const PostsApi = () => {\n    return fetch('https://jsonplaceholder.typicode.com/posts')\n        .then(response => response.json());\n};\n","export const CommentsApi = () => {\n    return fetch('https://jsonplaceholder.typicode.com/comments')\n        .then(response => response.json());\n};\n","import {UsersApi} from './UsersApi';\nimport {PostsApi} from './PostsApi';\nimport {CommentsApi} from './CommentsApi';\n\nexport async function PostsData() {\n    const [posts, users, comments] = await Promise.all([\n        PostsApi(),\n        UsersApi(),\n        CommentsApi()\n    ]);\n    const postsData = posts.map(post => ({\n        ...post,\n        user: users.find(user => user.id === post.userId),\n        comments: [...comments.filter(comment => comment.postId === post.id)]\n    }));\n    // console.log(postsData);\n    return postsData;\n};\n","import React from 'react';\n\nexport default function User({user}) {\n    const {name, email, address} = user;\n    const {street, suite, zipcode, city, geo} = address;\n    return (\n        <div>\n            <h4>Author:</h4>\n            <ul>\n                <li>{name}</li>\n                <li>{email}</li>\n                <li>\n                    {street} str.,\n                    {suite},\n                    Zip: {zipcode},\n                    {city}<br/>\n                    Geoposition:\n                    lat:{geo.lat},\n                    lng:{geo.lng}\n                </li>\n            </ul>\n        </div>\n    )\n}","import React from 'react';\n\nexport default function Comment({comment}) {\n    const {name, email, body} = comment;\n    return (\n        <li className='comment'>\n            <p className='title'>{name}</p>\n            <p>{email}</p>\n            <p>{body}</p>\n        </li>\n    )\n}","import React from 'react';\nimport Comment from \"../comment/Comment\";\n\nexport default function CommentsList({comments}) {\n    let commentsList = comments.map((item) => {\n        return (\n            <Comment\n                key={item.id}\n                comment={item}\n            />\n        )\n    });\n    return (\n        <div>\n            <h4>Comments: </h4>\n            <ul>\n                {commentsList}\n            </ul>\n        </div>\n    )\n}","import React from 'react';\nimport User from '../user/User';\nimport CommentsList from '../comments-list/CommentsList'\n\nexport default function Post({post}) {\n    const {title, body, userId, user, comments} = post;\n    return (\n        <li className='post'>\n            <h3 className='title'>{title}</h3>\n            <p>{body}</p>\n            <User\n                key={userId}\n                user={user}\n            />\n            <CommentsList\n                comments={comments}\n            />\n        </li>\n    )\n};","import React from 'react';\nimport Post from '../post/Post';\n\nexport default function PostList({posts, filterBy, value}) {\n    let post = posts.map((item) => {\n        return (\n            <Post\n                key={item.id}\n                post={item}\n            />\n        )\n    });\n    return (\n        <div>\n            <ul>\n                {post}\n            </ul>\n        </div>\n    )\n};","import React from 'react';\n\nexport default function SearchField({searchFieldType, searchFieldValue, updateSearchFieldsValue}) {\n    return (\n        <label\n            className='label'>\n            Filter by {searchFieldType}\n            <input\n                className='input'\n                type='search'\n                name={searchFieldType}\n                value={searchFieldValue}\n                onChange={updateSearchFieldsValue}\n                autoComplete='off'\n            />\n        </label>\n    )\n};\n\n","import React from 'react';\nimport {PostsData} from './components/util/PostsData';\nimport PostList from './components/post-list/PostList';\nimport SearchField from \"./components/search-field/SearchField\";\n\nexport default class App extends React.Component {\n    constructor(props) {\n        super(props);\n        this.state = {\n            isLoaded: false,\n            searchFieldType: 'title',\n            searchFieldValue: {\n                title: '',\n                body: '',\n                user: ''\n            }\n        }\n    }\n\n    loadData = () => {\n        this._asyncRequest = PostsData().then(\n            externalData => {\n                this._asyncRequest = null;\n                this.setState({\n                    postsData: externalData\n                });\n            }\n        );\n    };\n    showFilteredPosts = () => {\n\n        const fieldType = this.state.searchFieldType;\n        const searchFieldValue = this.state.searchFieldValue[fieldType].trim().toLowerCase();\n        if (!searchFieldValue.trim()) {\n            return;\n        }\n        if (fieldType === 'user') {\n            return this.state.postsData.filter(\n                post => post.user.name.trim().toLowerCase().includes(searchFieldValue)\n            )\n        }\n        return this.state.postsData.filter(\n            post => post[fieldType].trim().toLowerCase().includes(searchFieldValue)\n        );\n    };\n    updateSearchFieldsValue = (e) => {\n        this.setState({\n            searchFieldType: e.target.name\n        });\n        switch (e.target.name) {\n            case 'title':\n                this.setState({\n                    searchFieldValue: {\n                        'title': e.target.value,\n                        'body': '',\n                        'user': ''\n                    }\n                });\n                break;\n            case 'body':\n                this.setState({\n                    searchFieldValue: {\n                        'title': '',\n                        'body': e.target.value,\n                        'user': ''\n                    }\n                });\n                break;\n            case 'user':\n                this.setState({\n                    searchFieldValue: {\n                        'title': '',\n                        'body': '',\n                        'user': e.target.value\n                    }\n                });\n                break;\n            default:\n                console.log('unknown type');\n                break;\n        }\n    };\n\n    render() {\n        const {postsData, isLoaded, searchFieldValue: {title, body, user}} = this.state;\n        let postsToRender = this.showFilteredPosts() || postsData;\n        return (\n            <div>\n                <h1\n                    className='main-title'>\n                    React dynamic list of posts\n                </h1>\n                {postsData ? (\n                    <div>\n                        <span className='subtitle'>\n                            Amout of shown posts is {postsToRender.length}\n                        </span>\n                        <form\n                            className='form'>\n                            <SearchField\n                                key={1}\n                                searchFieldType='title'\n                                searchFieldValue={title}\n                                updateSearchFieldsValue={this.updateSearchFieldsValue}\n                            />\n                            <SearchField\n                                key={2}\n                                searchFieldType='body'\n                                searchFieldValue={body}\n                                updateSearchFieldsValue={this.updateSearchFieldsValue}\n                            />\n                            <SearchField\n                                key={3}\n                                searchFieldType='user'\n                                searchFieldValue={user}\n                                updateSearchFieldsValue={this.updateSearchFieldsValue}\n                            />\n                        </form>\n                        <PostList\n                            posts={postsToRender}/>\n                    </div>\n                ) : (\n                    <button\n                        className='button'\n                        onClick={this.loadData}\n                        disabled={isLoaded}>\n                        {isLoaded ? 'Loading' : 'Details'}\n                    </button>\n                )}\n            </div>\n        );\n    }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\nimport './App.css';\n\nReactDOM.render(<App/>, document.getElementById('root'));"],"sourceRoot":""}